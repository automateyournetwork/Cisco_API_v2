---

- hosts: Campus
  vars_prompt:
    - name: IOS_User_Prompt
      prompt: "Enter Cisco IOS Username"
      private: no 
    - name: IOS_Password_Prompt
      prompt: "Enter IOS Password"
      private: yes  
    - name: client_id
      prompt: "Enter Client ID"
      private: yes
    - name: client_secret
      prompt: "Enter Client Secret"
      private: yes          

# Register Username and Password And ClientID and Secret #
  tasks:
    - set_fact:   
        ios_user: "{{ IOS_User_Prompt }}"     
        ios_password: "{{ IOS_Password_Prompt }}"
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"        
      no_log: true
      delegate_to: localhost
      run_once: true   

# Gather Ansible Facts About Core #
    - name: Gather Ansible Facts About Core
      ios_facts:
        gather_subset:
          - hardware

# API PUT - Generate and store token from client ID and client key #
    - name: PUT Get Token
      uri:
        url: https://cloudsso.cisco.com/as/token.oauth2?grant_type=client_credentials&client_id={{client_id}}&client_secret={{client_secret}}
        headers: 
          Accept-Encoding: gzip, deflate, br
          Accept: application/json
          Content-Type: application/x-www-form-urlencoded
          User-Agent: Jakarta Commons-HttpClient/3.1
          host: cloudsso.cisco.com
          Connection: keep-alive
          Content-Length: 0
        method: POST
        return_content: yes
        validate_certs: no
        force_basic_auth: yes
        follow_redirects: yes
        body_format: json
      register: token

# Set Token Type and Access Token #
    - name: Set JSON
      set_fact:
        token_type: "{{ token.json.token_type }}"
        access_token: "{{ token.json.access_token }}"

# API GET Core Recommended Release #
    - name: GET Recommended Core Software
      uri:
        url: https://api.cisco.com/software/suggestion/v2/suggestions/software/productIds/{{ ansible_facts.net_model }}
        method: GET
        headers: 
          Authorization: "{{token_type}} {{access_token}}"
          Cache-Control: no-cache
          Accept-Encoding: gzip, deflate, br
          Connection: keep-alive
          Accept: application/json 
        return_content: yes
        validate_certs: no
        force_basic_auth: yes
        follow_redirects: yes
      register: RecommendedRelease

# Create Nice JSON, Nice YAML Files #
# Create JSON file with Ansible Facts #
    - name: Create raw JSON file
      copy: 
        content: | 
          {{ RecommendedRelease | to_nice_json }}
        dest: ../documentation/{{ inventory_hostname }}_RecommendedRelease.json

# Create YAML file with Ansible Facts #
    - name: Create raw YAML
      copy: 
        content: | 
          {{ RecommendedRelease | to_nice_yaml }}
        dest: ../documentation/{{ inventory_hostname }}_RecommendedRelease.yml

# Add Headers to YAML #
    - name: Header Row
      lineinfile:
        path: ../documentation/{{ inventory_hostname }}_RecommendedRelease.yml
        insertbefore: BOF
        line: ---        
      delegate_to: localhost    

# Create CSV and MD File #
# Create MAC CSV and MD file with results #
    - name: CSV and MD using Jinja templates
      template:
        src: ../templates/RecommendedVersionFacts.j2
        dest: ../documentation/{{ inventory_hostname }}_RecommendedRelease.{{ item }}
      loop: 
        - csv
        - md            